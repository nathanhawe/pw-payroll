using Microsoft.EntityFrameworkCore;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Payroll.Data;
using Payroll.Domain;
using Payroll.Domain.Constants;
using Payroll.Service;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Payroll.IntegrationTest
{
	[TestClass]
	public class TimeAndAttendanceIntegrations20200518
	{
		[TestMethod]
		public void PlantsAsOf20200628()
		{
			var weekEndingDate = new DateTime(2020, 6, 28);
			int? layoffId = null;
			var company = Company.Plants;


			// Database context
			var options = new DbContextOptionsBuilder<PayrollContext>()
				.UseSqlServer("Data Source = (localdb)\\MSSQLLocalDB; Initial Catalog = PayrollData")
				.Options;

			using var context = new PayrollContext(options);

			// Loggers
			var apiLogger = new MockLogger<QuickBase.Api.QuickBaseConnection>();
			var serviceLogger = new MockLogger<TimeAndAttendanceService>();



			// Repositories
			var pslTrackingDailyRepo = new MockPslTrackingDailyRepo(PlantPaidSickLeaveTestInput());
			var crewBossPayRepo = new MockCrewBossPayRepo();
			var ranchPayrollRepo = new MockRanchPayrollRepo();
			var ranchPayrollAdjustmentRepo = new MockRanchPayrollAdjustmentRepo();
			var ranchSummariesRepo = new MockRanchSummariesRepo();
			var plantPayrollRepo = new MockPlantPayrollRepo(PlantPayLinesTestInput(weekEndingDate, layoffId));
			var plantPayrollAdjustmentRepo = new MockPlantPayrollAdjustmentRepo(PlantAdjustmentLinesTestInput(weekEndingDate, layoffId));
			var plantSummariesRepo = new MockPlantSummariesRepo();

			// Services
			var minimumWageService = new MinimumWageService(context);
			var crewLaborWageService = new CrewLaborWageService(context);
			var roundingService = new RoundingService();
			var grossFromHoursCalculator = new GrossFromHoursCalculator(new RanchHourlyRateSelector(new CrewLaborWageService(context), minimumWageService), new PlantHourlyRateSelector(minimumWageService), roundingService);
			var grossFromPiecesCalculator = new GrossFromPiecesCalculator(roundingService);
			var grossFromIncentiveCalculator = new GrossFromIncentiveCalculator(roundingService);
			var totalGrossCalculator = new TotalGrossCalculator(roundingService);
			var dailySummaryCalculator = new DailySummaryCalculator(context, minimumWageService, roundingService, crewLaborWageService);
			

			var paidSickLeaveService = new PaidSickLeaveService(context, roundingService);
			var crewBossPayService = new CrewBossPayService(context, new CrewBossWageService(context), roundingService);
			var ranchDailyOTDTHoursCalculator = new RanchDailyOTDTHoursCalculator();
			var ranchWeeklySummaryCalculator = new RanchWeeklySummaryCalculator(roundingService);
			var ranchWeeklyOverTimeHoursCalculator = new RanchWeeklyOTHoursCalculator(roundingService);
			var ranchMinimumMakeUpCalculator = new RanchMinimumMakeUpCalculator(roundingService);
			var ranchSummaryService = new RanchSummaryService(context);

			var plantDailyOTDTHoursCalculator = new PlantDailyOTDTHoursCalculator();
			var plantWeeklySummaryCalculator = new PlantWeeklySummaryCalculator(roundingService);
			var plantWeeklyOverTimeHoursCalculator = new PlantWeeklyOTHoursCalculator(roundingService);
			var plantMinimumMakeUpCalculator = new PlantMinimumMakeUpCalculator(roundingService);
			var plantSummaryService = new PlantSummaryService(context);

			var service = new TimeAndAttendanceService(
				serviceLogger,
				context,
				pslTrackingDailyRepo,
				crewBossPayRepo,
				ranchPayrollRepo,
				ranchPayrollAdjustmentRepo,
				ranchSummariesRepo,
				plantPayrollRepo,
				plantPayrollAdjustmentRepo,
				plantSummariesRepo,
				grossFromHoursCalculator,
				grossFromPiecesCalculator,
				grossFromIncentiveCalculator,
				totalGrossCalculator,
				dailySummaryCalculator,
				roundingService,
				paidSickLeaveService,
				crewBossPayService,
				ranchDailyOTDTHoursCalculator,
				ranchWeeklySummaryCalculator,
				ranchWeeklyOverTimeHoursCalculator,
				ranchMinimumMakeUpCalculator,
				ranchSummaryService,
				plantDailyOTDTHoursCalculator,
				plantWeeklySummaryCalculator,
				plantWeeklyOverTimeHoursCalculator,
				plantMinimumMakeUpCalculator,
				plantSummaryService);

			// Create a new batch
			var batch = new Batch
			{
				WeekEndDate = weekEndingDate,
				LayoffId = layoffId,
				Company = company
			};
			context.Add(batch);
			context.SaveChanges();

			// Batch should now have an Id and the process can be executed
			service.PerformCalculations(batch.Id);

			Assert.AreEqual(13, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverride").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverride" && x.PayType == "H-2A Hours Offered" && x.TotalGross == 0 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverride" && x.PayType == PayType.Regular && x.TotalGross == 118.16M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverride" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverride" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverride" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.39M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "H2ANoOverride" && x.TotalHours == 48 && x.TotalGross == 768.08M && x.CovidHours == 0).Count());

			Assert.AreEqual(16, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == "H-2A Hours Offered" && x.TotalGross == 0 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.Regular && x.HourlyRate == 10M && x.TotalGross == 80M && x.QuickBaseRecordId == 19).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.Regular && x.HourlyRate == 11M && x.TotalGross == 88M && x.QuickBaseRecordId == 20).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.Regular && x.HourlyRate == 12M && x.TotalGross == 96M && x.QuickBaseRecordId == 21).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.Regular && x.HourlyRate == 13M && x.TotalGross == 104M && x.QuickBaseRecordId == 22).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.Regular && x.HourlyRate == 14M && x.TotalGross == 112M && x.QuickBaseRecordId == 23).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.Regular && x.HourlyRate == 15M && x.TotalGross == 120M && x.QuickBaseRecordId == 24).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.MinimumAssurance && x.HourlyRate == 0M && x.TotalGross == 24 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.MinimumAssurance && x.HourlyRate == 0M && x.TotalGross == 16 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.MinimumAssurance && x.HourlyRate == 0M && x.TotalGross == 8 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 6.75M && x.TotalGross == 54M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "H2AWithOverride" && x.TotalHours == 48 && x.TotalGross == 702 && x.CovidHours == 0).Count());

			Assert.AreEqual(13, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithCOVIDHours").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithCOVIDHours" && x.PayType == "H-2A Hours Offered" && x.TotalGross == 0 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithCOVIDHours" && x.PayType == PayType.Regular && x.TotalGross == 118.16M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithCOVIDHours" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithCOVIDHours" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithCOVIDHours" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.39M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithCOVIDHours" && x.TotalHours == 48 && x.TotalGross == 768.08M && x.CovidHours == 16).Count());

			Assert.AreEqual(19, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == "H-2A Hours Offered" && x.TotalGross == 0 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.TotalGross == 132.93M && x.QuickBaseRecordId == 7).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.TotalGross == 147.7M && x.QuickBaseRecordId == 8).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.TotalGross == 155.09M && x.QuickBaseRecordId == 9).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.TotalGross == 162.47M && x.QuickBaseRecordId == 10).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.TotalGross == 169.86M && x.QuickBaseRecordId == 11).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.TotalGross == 177.24M && x.QuickBaseRecordId == 12).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.OverTime && x.HourlyRate == 7.39M && x.OtDtWotHours == 1 && x.TotalGross == 7.39M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.OverTime && x.HourlyRate == 7.39M && x.OtDtWotHours == 2 && x.TotalGross == 14.78M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.OverTime && x.HourlyRate == 7.39M && x.OtDtWotHours == 2.5M && x.TotalGross == 18.48M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.OverTime && x.HourlyRate == 7.39M && x.OtDtWotHours == 3 && x.TotalGross == 22.17M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.OverTime && x.HourlyRate == 7.39M && x.OtDtWotHours == 3.5M && x.TotalGross == 25.87M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.OverTime && x.HourlyRate == 7.39M && x.OtDtWotHours == 4 && x.TotalGross == 29.56M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.39M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideWithDailyOT" && x.TotalHours == 64 && x.TotalGross == 1122.66M && x.CovidHours == 0).Count());

			Assert.AreEqual(12, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeek").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeek" && x.PayType == "H-2A Hours Offered" && x.TotalGross == 0 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(4, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeek" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.TotalGross == 147.7M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeek" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.TotalGross == 118.16M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeek" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeek" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.39M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeek" && x.TotalHours == 48 && x.TotalGross == 768.08M && x.CovidHours == 0).Count());

			Assert.AreEqual(23, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeekWithDailyOT").Count());
			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeekWithDailyOT" && x.PayType == "H-2A Hours Offered" && x.TotalGross == 0 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeekWithDailyOT" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.TotalGross == 162.47M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeekWithDailyOT" && x.PayType == PayType.OverTime && x.HourlyRate == 7.39M && x.TotalGross == 7.39M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeekWithDailyOT" && x.PayType == PayType.OverTime && x.HourlyRate == 7.39M && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeekWithDailyOT" && x.PayType == PayType.DoubleTime && x.HourlyRate == 14.77M && x.TotalGross == 44.31M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeekWithDailyOT" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.39M && x.TotalGross == 147.8M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "H2ANoOverrideAlternativeWorkWeekWithDailyOT" && x.TotalHours == 77 && x.TotalGross == 1432.86M && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerMinimumPlusIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 116 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14.5M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 58 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.25M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "PalletizingCutlerMinimumPlusIsGreater" && x.TotalHours == 48 && x.TotalGross == 754 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutler14.77IsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutler14.77IsGreater" && x.PayType == PayType.Regular && x.TotalGross == 118.16M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutler14.77IsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutler14.77IsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutler14.77IsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.39M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "PalletizingNotCutler14.77IsGreater" && x.TotalHours == 48 && x.TotalGross == 768.08M && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 136 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 17M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 68 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 8.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "FreshCutEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 884 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutMinimumIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutMinimumIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutMinimumIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "FreshCutMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "FreshCutMinimumIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 116 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14.5M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 58 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.25M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater" && x.TotalHours == 48 && x.TotalGross == 754 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutler14.77IsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutler14.77IsGreater" && x.PayType == PayType.Regular && x.TotalGross == 118.16M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutler14.77IsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutler14.77IsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutler14.77IsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.39M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingAndMarkingGrapesNotCutler14.77IsGreater" && x.TotalHours == 48 && x.TotalGross == 768.08M && x.CovidHours == 0).Count());


			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerMinimumPlusIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 112 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 56 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "NightSanitationCutlerMinimumPlusIsGreater" && x.TotalHours == 48 && x.TotalGross == 728 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutler14.77IsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutler14.77IsGreater" && x.PayType == PayType.Regular && x.TotalGross == 118.16M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutler14.77IsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14.77M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutler14.77IsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutler14.77IsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.39M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "NightSanitationNotCutler14.77IsGreater" && x.TotalHours == 48 && x.TotalGross == 768.08M && x.CovidHours == 0).Count());


			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 144 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 18 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 72 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 9 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "NightSupervisionEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 936 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionMinimumIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionMinimumIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 128 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionMinimumIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 16 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 64 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightSupervisionMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 8 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "NightSupervisionMinimumIsGreater" && x.TotalHours == 48 && x.TotalGross == 832 && x.CovidHours == 0).Count());


			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 132 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 16.5M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 66 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 8.25M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 858 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorMinimumIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorMinimumIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 116 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorMinimumIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14.5M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 58 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.25M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "NightShiftAuditorMinimumIsGreater" && x.TotalHours == 48 && x.TotalGross == 754 && x.CovidHours == 0).Count());


			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerMinimumIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerMinimumIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 104 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerMinimumIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 13 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 52 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 6.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitCutlerMinimumIsGreater" && x.TotalHours == 48 && x.TotalGross == 676 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 112 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 56 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater" && x.TotalHours == 48 && x.TotalGross == 728 && x.CovidHours == 0).Count());


			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerMinimumIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerMinimumIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 104 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerMinimumIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 13 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 52 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 6.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakCutlerMinimumIsGreater" && x.TotalHours == 48 && x.TotalGross == 676 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 120 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 15 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 60 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.5M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 780 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 112 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 56 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater" && x.TotalHours == 48 && x.TotalGross == 728 && x.CovidHours == 0).Count());


			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningEmployeeRateIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 132 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningEmployeeRateIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 16.5M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 66 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningEmployeeRateIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 8.25M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningEmployeeRateIsGreater" && x.TotalHours == 48 && x.TotalGross == 858 && x.CovidHours == 0).Count());

			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningMinimumIsGreater").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningMinimumIsGreater" && x.PayType == PayType.Regular && x.TotalGross == 116 && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningMinimumIsGreater" && x.PayType == PayType.Regular && x.HourlyRate == 14.5M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 58 && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningMinimumIsGreater" && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7.25M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "COVIDPreScreeningMinimumIsGreater" && x.TotalHours == 48 && x.TotalGross == 754 && x.CovidHours == 0).Count());

			
			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PiecesIgnoredOnNonPiecesPayType").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PiecesIgnoredOnNonPiecesPayType" && x.PayType == PayType.Regular && x.TotalGross == 118.16M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PiecesIgnoredOnNonPiecesPayType" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "PiecesIgnoredOnNonPiecesPayType" && x.TotalHours == 48 && x.TotalGross == 768.08M && x.CovidHours == 0).Count());


			Assert.AreEqual(7, plantPayrollRepo.Output.Where(x => x.EmployeeId == "IgnoreSpecialAdjustmentNotApproved").Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "IgnoreSpecialAdjustmentNotApproved" && x.PayType == PayType.Regular && x.TotalGross == 118.16M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "IgnoreSpecialAdjustmentNotApproved" && x.PayType == PayType.WeeklyOverTime && x.TotalGross == 59.12M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "IgnoreSpecialAdjustmentNotApproved" && x.TotalHours == 48 && x.TotalGross == 768.08M && x.CovidHours == 0).Count());


			Assert.AreEqual(103, plantPayrollRepo.Output.Where(x => x.EmployeeId == "Pieces").Count());
			Assert.AreEqual(79, plantPayrollRepo.Output.Where(x => x.EmployeeId == "Pieces" && x.PayType == PayType.Pieces).Count());
			Assert.AreEqual(17, plantPayrollRepo.Output.Where(x => x.EmployeeId == "Pieces" && x.PayType == PayType.Regular).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "Pieces" && x.PayType == PayType.Regular && x.LaborCode == (int)PlantLaborCode.NonProductiveTime && x.HourlyRateOverride == 16.97M && x.HourlyRate == 16.97M).Count());
			Assert.AreEqual(4, plantPayrollRepo.Output.Where(x => x.EmployeeId == "Pieces" && x.PayType == PayType.OverTime).Count());
			Assert.AreEqual(2, plantPayrollRepo.Output.Where(x => x.EmployeeId == "Pieces" && x.PayType == PayType.DoubleTime).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "Pieces" && x.PayType == PayType.WeeklyOverTime).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "Pieces" && x.TotalHours == 56.8M && x.TotalGross == 1131.06M && x.CovidHours == 0).Count());


			Assert.AreEqual(82, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PiecesWithMinimumAssurance").Count());
			Assert.AreEqual(53, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PiecesWithMinimumAssurance" && x.PayType == PayType.Pieces).Count());
			Assert.AreEqual(16, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PiecesWithMinimumAssurance" && x.PayType == PayType.Regular).Count());
			Assert.AreEqual(5, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PiecesWithMinimumAssurance" && x.PayType == PayType.MinimumAssurance).Count());
			Assert.AreEqual(5, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PiecesWithMinimumAssurance" && x.PayType == PayType.OverTime).Count());
			Assert.AreEqual(3, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PiecesWithMinimumAssurance" && x.PayType == PayType.DoubleTime).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "PiecesWithMinimumAssurance" && x.TotalHours == 58.54M && x.TotalGross == 905.59M && x.CovidHours == 0).Count());


			Assert.AreEqual(8, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterIncentive").Count());
			Assert.AreEqual(5, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterIncentive" && x.PayType == PayType.Regular && x.HourlyRate == 13 && x.GrossFromHours == 104 && x.GrossFromIncentive == 16 && x.TotalGross == 120M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterIncentive" && x.PayType == PayType.Regular && x.HourlyRate == 13 && x.GrossFromHours == 26 && x.GrossFromIncentive == 4 && x.TotalGross == 30M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterIncentive" && x.PayType == PayType.Regular && x.HourlyRate == 13 && x.GrossFromHours == 78 && x.GrossFromIncentive == 0 && x.TotalGross == 78M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterIncentive" && x.PayType == PayType.WeeklyOverTime && x.OtDtWotHours == 8 && x.OtDtWotRate == 7.38M && x.HourlyRate == 7.38M && x.TotalGross == 59.04M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "TagWriterIncentive" && x.TotalHours == 48 && x.TotalGross == 767.04M && x.CovidHours == 0).Count());

			Assert.AreEqual(8, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterLostIncentive").Count());
			Assert.AreEqual(2, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterLostIncentive" && x.PayType == PayType.Regular && x.HourlyRate == 13 && x.GrossFromHours == 104 && x.GrossFromIncentive == 0 && x.TotalGross == 104M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(3, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterLostIncentive" && x.PayType == PayType.Regular && x.HourlyRate == 13 && x.GrossFromHours == 104 && x.GrossFromIncentive == 16 && x.TotalGross == 120M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterLostIncentive" && x.PayType == PayType.Regular && x.HourlyRate == 13 && x.GrossFromHours == 26 && x.GrossFromIncentive == 4 && x.TotalGross == 30M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterLostIncentive" && x.PayType == PayType.Regular && x.HourlyRate == 13 && x.GrossFromHours == 78 && x.GrossFromIncentive == 0 && x.TotalGross == 78M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "TagWriterLostIncentive" && x.PayType == PayType.WeeklyOverTime && x.OtDtWotHours == 8 && x.OtDtWotRate == 7.04M && x.HourlyRate == 7.04M && x.TotalGross == 56.32M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "TagWriterLostIncentive" && x.TotalHours == 48 && x.TotalGross == 732.32M && x.CovidHours == 6).Count());


			Assert.AreEqual(21, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave").Count());
			Assert.AreEqual(12, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.PayType == PayType.Regular && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(6, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.PayType == PayType.OverTime && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.PayType == PayType.DoubleTime && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.PayType == PayType.SickLeave && x.HourlyRate == 13.12M && x.GrossFromHours == 104.96M && x.TotalGross == 104.96M && x.QuickBaseRecordId != 0).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.PayType == PayType.WeeklyOverTime && x.OtDtWotHours == 6.33M && x.OtDtWotRate == 6.88M && x.HourlyRate == 6.88M && x.TotalGross == 43.55M && x.QuickBaseRecordId == 0).Count());
			Assert.AreEqual(1, plantSummariesRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.TotalHours == 76.23M && x.TotalGross == 1247.45M && x.CovidHours == 0).Count());
			Assert.AreEqual(7, pslTrackingDailyRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave").Count());
			Assert.AreEqual(1, pslTrackingDailyRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.Company == Company.Plants && x.ShiftDate == new DateTime(2020, 6, 22) && x.HoursUsed == 8 && x.Hours == 6.33M && x.Gross == 87.04M && x.NinetyDayHours == 377.95M && x.NinetyDayGross == 4957.47M).Count());
			Assert.AreEqual(1, pslTrackingDailyRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.Company == Company.Plants && x.ShiftDate == new DateTime(2020, 6, 23) && x.HoursUsed == 0 && x.Hours == 9.21M && x.Gross == 126.64M && x.NinetyDayHours == 384.28M && x.NinetyDayGross == 5044.51M).Count());
			Assert.AreEqual(1, pslTrackingDailyRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.Company == Company.Plants && x.ShiftDate == new DateTime(2020, 6, 24) && x.HoursUsed == 0 && x.Hours == 9.8M && x.Gross == 134.75M && x.NinetyDayHours == 393.49M && x.NinetyDayGross == 5171.15M).Count());
			Assert.AreEqual(1, pslTrackingDailyRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.Company == Company.Plants && x.ShiftDate == new DateTime(2020, 6, 25) && x.HoursUsed == 0 && x.Hours == 11.13M && x.Gross == 153.04M && x.NinetyDayHours == 403.29M && x.NinetyDayGross == 5305.9M).Count());
			Assert.AreEqual(1, pslTrackingDailyRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.Company == Company.Plants && x.ShiftDate == new DateTime(2020, 6, 26) && x.HoursUsed == 0 && x.Hours == 10.8M && x.Gross == 148.51M && x.NinetyDayHours == 414.42M && x.NinetyDayGross == 5458.94M).Count());
			Assert.AreEqual(1, pslTrackingDailyRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.Company == Company.Plants && x.ShiftDate == new DateTime(2020, 6, 27) && x.HoursUsed == 0 && x.Hours == 13.47M && x.Gross == 185.21M && x.NinetyDayHours == 425.22M && x.NinetyDayGross == 5607.45M).Count());
			Assert.AreEqual(1, pslTrackingDailyRepo.Output.Where(x => x.EmployeeId == "PaidSickLeave" && x.Company == Company.Plants && x.ShiftDate == new DateTime(2020, 6, 28) && x.HoursUsed == 0 && x.Hours == 7.49M && x.Gross == 102.99M && x.NinetyDayHours == 438.69M && x.NinetyDayGross == 5792.66M).Count());


			Assert.AreEqual(80, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093").Count());
			Assert.AreEqual(40, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && x.IsOriginal).Count());
			Assert.AreEqual(40, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal).Count());
			Assert.AreEqual(3310.03M, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && x.IsOriginal).Sum(x => x.TotalGross));
			Assert.AreEqual(3564.47M, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal).Sum(x => x.TotalGross));
			Assert.AreEqual(1474.48M, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal && x.WeekEndDate == new DateTime(2020, 5, 17)).Sum(x => x.TotalGross));
			Assert.AreEqual(969.99M, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal && x.WeekEndDate == new DateTime(2020, 5, 24)).Sum(x => x.TotalGross));
			Assert.AreEqual(560M, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal && x.WeekEndDate == new DateTime(2020, 5, 31)).Sum(x => x.TotalGross));
			Assert.AreEqual(560M, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal && x.WeekEndDate == new DateTime(2020, 6, 7)).Sum(x => x.TotalGross));
			Assert.AreEqual(21, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal && x.PayType == PayType.Regular && x.HourlyRate == 14M).Count());
			Assert.AreEqual(10, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal && x.PayType == PayType.OverTime && x.HourlyRate == 7M && x.OtDtWotRate == 7M).Count());
			Assert.AreEqual(8, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal && x.PayType == PayType.DoubleTime && x.HourlyRate == 14M && x.OtDtWotRate == 14M).Count());
			Assert.AreEqual(1, plantPayrollAdjustmentRepo.Output.Where(x => x.EmployeeId == "826093" && !x.IsOriginal && x.PayType == PayType.WeeklyOverTime && x.HourlyRate == 7M && x.OtDtWotRate == 7M).Count());
			Assert.AreEqual(1, plantPayrollRepo.Output.Where(x => x.EmployeeId == "826093" && x.PayType == PayType.Adjustment && x.TotalGross == 254.44M && x.WeekEndDate == new DateTime(2020, 7, 5) && x.ShiftDate == new DateTime(2020, 7, 5)).Count());
		}

		private List<PlantPayLine> PlantPayLinesTestInput(DateTime weekEndDate, int? layoffId)
		{
			var monday = new DateTime(2020, 6, 22);
			var tuesday = monday.AddDays(1);
			var wednesday = tuesday.AddDays(1);
			var thursday = wednesday.AddDays(1);
			var friday = thursday.AddDays(1);
			var saturday = friday.AddDays(1);
			var sunday = saturday.AddDays(1);
			return new List<PlantPayLine> {
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 7, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 20M, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 8, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 9, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 10, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Packing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 11, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverride", QuickBaseRecordId = 12, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 13, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 14, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 15, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 16, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 17, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 18, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 19, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 10, EmployeeHourlyRate = 20M, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 20, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 11, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 21, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 12, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 22, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Packing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 13, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 23, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 14, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2AWithOverride", QuickBaseRecordId = 24, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 15, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 7, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 20M, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 8, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 9, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 10, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Packing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 11, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithCOVIDHours", QuickBaseRecordId = 12, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 7, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 9, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 20M, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 8, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 10, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 9, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 10.5M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 10, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Packing, HoursWorked = 11, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 11, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 11.5M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideWithDailyOT", QuickBaseRecordId = 12, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 12, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 7, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 10, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 20M, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 8, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 10, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 9, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 10, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 10, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Packing, HoursWorked = 10, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeek", QuickBaseRecordId = 11, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 7, ShiftDate = sunday, Plant = (int)Plant.Kerman,  PayType = "H-2A Hours Offered", LaborCode = 0, HoursWorked = 0, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 8, ShiftDate = monday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 11, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 20M, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 9, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 11, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 10, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 11, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 11, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Packing, HoursWorked = 11, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 12, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 11, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 13, ShiftDate = saturday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 11, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "H2ANoOverrideAlternativeWorkWeekWithDailyOT", QuickBaseRecordId = 14, ShiftDate = sunday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 11, Pieces = 0, AlternativeWorkWeek = true, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = true, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerMinimumPlusIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerMinimumPlusIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerMinimumPlusIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerMinimumPlusIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerMinimumPlusIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingCutlerMinimumPlusIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutler14.77IsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutler14.77IsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutler14.77IsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutler14.77IsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutler14.77IsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PalletizingNotCutler14.77IsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutMinimumIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutMinimumIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutMinimumIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutMinimumIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutMinimumIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "FreshCutMinimumIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.FreshCut, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesCutlerMinimumPlusIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutler14.77IsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutler14.77IsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutler14.77IsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutler14.77IsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutler14.77IsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingAndMarkingGrapesNotCutler14.77IsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingAndMarkingGrapes, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerMinimumPlusIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 13M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerMinimumPlusIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 13M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerMinimumPlusIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 13M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerMinimumPlusIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 13M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerMinimumPlusIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 13M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationCutlerMinimumPlusIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 13M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutler14.77IsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutler14.77IsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutler14.77IsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutler14.77IsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutler14.77IsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSanitationNotCutler14.77IsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightSanitation, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionMinimumIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionMinimumIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionMinimumIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionMinimumIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionMinimumIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightSupervisionMinimumIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftSupervision, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorMinimumIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorMinimumIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorMinimumIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorMinimumIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorMinimumIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "NightShiftAuditorMinimumIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.NightShiftAuditor, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerMinimumIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerMinimumIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerMinimumIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerMinimumIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerMinimumIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitCutlerMinimumIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.ReceivingFreshFruit, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerMinimumIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerMinimumIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerMinimumIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerMinimumIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerMinimumIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakCutlerMinimumIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "ReceivingFreshFruitBreakNotCutlerMinimumPlusIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Receiving_Break, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 12M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningEmployeeRateIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningEmployeeRateIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningEmployeeRateIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningEmployeeRateIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningEmployeeRateIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningEmployeeRateIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 15M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningMinimumIsGreater", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningMinimumIsGreater", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningMinimumIsGreater", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningMinimumIsGreater", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningMinimumIsGreater", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "COVIDPreScreeningMinimumIsGreater", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19PreScreening, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesIgnoredOnNonPiecesPayType", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 100, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = .1M, PrimaRate = .15M, IncreasedRate = .17M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesIgnoredOnNonPiecesPayType", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 100, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = .1M, PrimaRate = .15M, IncreasedRate = .17M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesIgnoredOnNonPiecesPayType", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 100, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = .1M, PrimaRate = .15M, IncreasedRate = .17M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesIgnoredOnNonPiecesPayType", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 100, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = .1M, PrimaRate = .15M, IncreasedRate = .17M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesIgnoredOnNonPiecesPayType", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 100, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = .1M, PrimaRate = .15M, IncreasedRate = .17M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesIgnoredOnNonPiecesPayType", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 100, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = .1M, PrimaRate = .15M, IncreasedRate = .17M, SpecialAdjustmentApproved = false },


				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "IgnoreSpecialAdjustmentNotApproved", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "IgnoreSpecialAdjustmentNotApproved", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "IgnoreSpecialAdjustmentNotApproved", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "IgnoreSpecialAdjustmentNotApproved", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "IgnoreSpecialAdjustmentNotApproved", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "IgnoreSpecialAdjustmentNotApproved", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "IgnoreSpecialAdjustmentNotApproved", QuickBaseRecordId = 7, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.SpecialAdjustment, LaborCode = (int)PlantLaborCode.Palletizing, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 14M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },


				// Pieces
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7571771, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 21, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7571772, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 2, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.03M, PrimaRate = 0.03M, IncreasedRate = 0.03M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573405, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 24, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.48M, IncreasedRate = 0.58M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573406, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 41, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.56M, IncreasedRate = 0.7M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573407, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 98, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 0.86M, IncreasedRate = 1.08M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573408, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573409, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 3, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.39M, PrimaRate = 0.43M, IncreasedRate = 0.54M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573410, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 52, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.88M, PrimaRate = 1.04M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573411, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.47M, PrimaRate = 0.53M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573412, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 16, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.86M, PrimaRate = 0.92M, IncreasedRate = 1.18M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573413, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.42M, PrimaRate = 0.48M, IncreasedRate = 0.53M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573414, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.43M, PrimaRate = 0.46M, IncreasedRate = 0.59M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573415, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.17M, PrimaRate = 0.22M, IncreasedRate = 0.28M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573416, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.17M, PrimaRate = 0.2M, IncreasedRate = 0.25M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573417, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.53M, IncreasedRate = 0.64M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573418, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 3, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.61M, IncreasedRate = 0.74M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573419, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 81, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.24M, PrimaRate = 0.26M, IncreasedRate = 0.28M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7573420, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 88, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.34M, PrimaRate = 0.4M, IncreasedRate = 0.5M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7608584, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.2667M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7608585, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 11.98M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7631299, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 382, HoursWorked = 0.35M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 9316502, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.72M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7577394, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 6, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7577395, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 4, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.03M, PrimaRate = 0.03M, IncreasedRate = 0.03M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7578588, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 16, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.88M, PrimaRate = 1.04M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7578589, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 5, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.47M, PrimaRate = 0.53M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7579005, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 13, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.48M, IncreasedRate = 0.58M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7579006, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 32, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 0.86M, IncreasedRate = 1.08M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7579007, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 3, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.39M, PrimaRate = 0.43M, IncreasedRate = 0.54M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7579008, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 8, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.88M, PrimaRate = 1.04M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7579009, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 4, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.24M, PrimaRate = 0.26M, IncreasedRate = 0.28M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7611004, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.8333M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7611005, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 3.5M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 9315399, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.23M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7594834, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 34, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595175, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 14, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.88M, PrimaRate = 1.04M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595176, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 3, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.47M, PrimaRate = 0.53M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595177, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 2, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.42M, PrimaRate = 0.48M, IncreasedRate = 0.53M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595178, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 7, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 1.1M, PrimaRate = 1.3M, IncreasedRate = 1.03M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595179, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.53M, IncreasedRate = 0.64M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595180, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 5, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595181, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 56, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.86M, PrimaRate = 1.04M, IncreasedRate = 1.26M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595182, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 2, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.43M, PrimaRate = 0.52M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595183, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 21, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595184, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 27, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.61M, IncreasedRate = 0.74M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7595185, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 7, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.61M, IncreasedRate = 0.74M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7613477, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.55M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7613478, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 7.91M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7630407, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 382, HoursWorked = 0.42M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 9315614, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.65M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7600110, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 30, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7600111, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 2, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.03M, PrimaRate = 0.03M, IncreasedRate = 0.03M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7600424, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7600425, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 30, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.86M, PrimaRate = 1.04M, IncreasedRate = 1.26M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7600426, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 9, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.54M, PrimaRate = 0.68M, IncreasedRate = 0.88M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7600427, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.43M, PrimaRate = 0.52M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7600428, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 20, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7600429, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 12, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.61M, IncreasedRate = 0.74M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7600430, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 5, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.61M, IncreasedRate = 0.74M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7621390, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.3833M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7621391, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 4M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7630219, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 382, HoursWorked = 0.17M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 9315428, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.43M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7603998, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 44, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7603999, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 9, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.03M, PrimaRate = 0.03M, IncreasedRate = 0.03M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605169, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 35, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.88M, PrimaRate = 1.04M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605170, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 4, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.47M, PrimaRate = 0.53M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605171, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 36, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 1.1M, PrimaRate = 1.3M, IncreasedRate = 1.03M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605172, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 2, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605173, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 19, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.86M, PrimaRate = 1.04M, IncreasedRate = 1.26M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605174, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 21, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605175, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 36, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.61M, IncreasedRate = 0.74M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605176, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.6M, PrimaRate = 0.72M, IncreasedRate = 0.94M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605177, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 13, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.61M, IncreasedRate = 0.74M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7605178, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 57, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.34M, PrimaRate = 0.4M, IncreasedRate = 0.5M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7623886, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.4833M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7623887, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 12.1M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7631313, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 382, HoursWorked = 0.33M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 9316515, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.65M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7626414, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 17, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7626785, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 6, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.48M, IncreasedRate = 0.58M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7626786, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 28, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 0.86M, IncreasedRate = 1.08M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7626787, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 2, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.47M, PrimaRate = 0.53M, IncreasedRate = 0.63M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7626788, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7626789, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 38, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.88M, PrimaRate = 1.04M, IncreasedRate = 1.2M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7628028, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 38, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.075M, IncreasedRate = 0.075M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7628029, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 4, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.03M, PrimaRate = 0.03M, IncreasedRate = 0.03M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7628389, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 19, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.6M, IncreasedRate = 0.58M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7628390, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 86, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 1.07M, IncreasedRate = 1.08M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7628391, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.39M, PrimaRate = 0.54M, IncreasedRate = 0.54M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7628392, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 2, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.53M, IncreasedRate = 0.64M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7628393, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.61M, IncreasedRate = 0.74M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7636424, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.4M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7636425, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 9.72M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 7639183, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 382, HoursWorked = 0.08M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "Pieces", QuickBaseRecordId = 9317338, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.65M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },

				// Pieces w/ Minimum Assurance
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575223, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.48M, IncreasedRate = 0.58M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575224, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 14, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 0.86M, IncreasedRate = 1.08M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575225, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 101, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575226, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 15, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.86M, PrimaRate = 1.04M, IncreasedRate = 1.26M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575227, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 29, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.54M, PrimaRate = 0.68M, IncreasedRate = 0.88M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575228, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.43M, PrimaRate = 0.52M, IncreasedRate = 0.63M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575229, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 28, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575230, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.05M, PrimaRate = 0.05M, IncreasedRate = 0.05M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575231, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.61M, IncreasedRate = 0.74M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575232, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.6M, PrimaRate = 0.72M, IncreasedRate = 0.94M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7575233, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 21, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.34M, PrimaRate = 0.4M, IncreasedRate = 0.5M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7576018, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 44, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7610964, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.2667M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7610965, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 11.55M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7631132, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 382, HoursWorked = 0.5M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 9316907, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.65M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 13M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7613442, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.3833M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7613443, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 7.39M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7620429, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 11, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.48M, IncreasedRate = 0.58M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7620430, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.56M, IncreasedRate = 0.7M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7620431, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 46, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 0.86M, IncreasedRate = 1.08M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7620432, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 3, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.39M, PrimaRate = 0.43M, IncreasedRate = 0.54M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7620433, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 59, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.34M, PrimaRate = 0.4M, IncreasedRate = 0.5M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7621228, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 55, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7631788, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 382, HoursWorked = 0.75M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 9316910, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.43M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 13M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7598059, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 0.86M, IncreasedRate = 1.08M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7598060, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7598745, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 0.86M, IncreasedRate = 1.08M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7598746, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.34M, PrimaRate = 0.4M, IncreasedRate = 0.5M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7599313, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 36, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7599314, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 94, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.86M, PrimaRate = 1.04M, IncreasedRate = 1.26M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7599315, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 3, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.43M, PrimaRate = 0.52M, IncreasedRate = 0.63M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7599316, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 20, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7599317, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.94M, PrimaRate = 1.14M, IncreasedRate = 1.36M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7599905, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 49, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7599906, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.05M, PrimaRate = 0.05M, IncreasedRate = 0.05M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7615936, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.2333M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7615937, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 11.35M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7615938, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 314, HoursWorked = 0.6667M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7630929, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 382, HoursWorked = 0.25M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 9316906, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.65M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 13M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7602835, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 10, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.48M, IncreasedRate = 0.58M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7602836, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 85, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 0.86M, IncreasedRate = 1.08M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7602837, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 5, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.39M, PrimaRate = 0.43M, IncreasedRate = 0.54M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7602838, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 8, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.34M, PrimaRate = 0.4M, IncreasedRate = 0.5M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7603775, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 46, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7623836, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.7333M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7623837, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 8.25M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7623838, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 114, HoursWorked = 0.4833M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 9316904, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.43M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 13M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7606359, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.48M, IncreasedRate = 0.58M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607713, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 6, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607714, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.86M, PrimaRate = 1.04M, IncreasedRate = 1.26M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607715, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.54M, PrimaRate = 0.68M, IncreasedRate = 0.88M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607716, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 39, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.56M, IncreasedRate = 0.67M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607717, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 10, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.6M, PrimaRate = 0.72M, IncreasedRate = 0.94M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607718, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 22, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.34M, PrimaRate = 0.4M, IncreasedRate = 0.5M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607719, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 20, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.48M, IncreasedRate = 0.58M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607720, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 15, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.41M, PrimaRate = 0.48M, IncreasedRate = 0.58M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607721, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 27, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.5M, PrimaRate = 0.56M, IncreasedRate = 0.7M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607722, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 35, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.78M, PrimaRate = 0.86M, IncreasedRate = 1.08M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607723, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = true, UseIncreasedRate = false, NonPrimaRate = 0.45M, PrimaRate = 0.53M, IncreasedRate = 0.64M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7607970, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 1, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.34M, PrimaRate = 0.4M, IncreasedRate = 0.5M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7608378, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 0M, Pieces = 49, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0.06M, PrimaRate = 0.06M, IncreasedRate = 0.06M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7626317, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.5333M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7626318, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Pieces, LaborCode = 123, HoursWorked = 12.28M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 7631304, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 382, HoursWorked = 0.12M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PiecesWithMinimumAssurance", QuickBaseRecordId = 9316909, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 381, HoursWorked = 0.65M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 13M, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved  = false },

				// Tag Writer Incentive
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterIncentive", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterIncentive", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterIncentive", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterIncentive", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterIncentive", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterIncentive", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Unknown, HoursWorked = 6, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterIncentive", QuickBaseRecordId = 7, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 2, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				// Tag Writer Lost Incentive
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterLostIncentive", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = true, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterLostIncentive", QuickBaseRecordId = 2, ShiftDate = tuesday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = true, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterLostIncentive", QuickBaseRecordId = 3, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterLostIncentive", QuickBaseRecordId = 4, ShiftDate = thursday, Plant = (int)Plant.Cutler,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterLostIncentive", QuickBaseRecordId = 5, ShiftDate = friday, Plant = (int)Plant.Kerman,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 8, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterLostIncentive", QuickBaseRecordId = 6, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.Covid19, HoursWorked = 6, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "TagWriterLostIncentive", QuickBaseRecordId = 7, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = (int)PlantLaborCode.TallyTagWriter, HoursWorked = 2, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0, EmployeeHourlyRate = 0M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0, PrimaRate = 0, IncreasedRate = 0, SpecialAdjustmentApproved = false },

				// Sick Leave
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 1, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 122, HoursWorked = 6.33M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 2, ShiftDate = monday, Plant = (int)Plant.Sanger,  PayType = PayType.SickLeave, LaborCode = 0, HoursWorked = 8M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 3, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.03M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 4, ShiftDate = tuesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 122, HoursWorked = 9.18M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 5, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.03M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 6, ShiftDate = wednesday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 122, HoursWorked = 9.77M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 7, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.05M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 8, ShiftDate = thursday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 122, HoursWorked = 11.08M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 9, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.1M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 10, ShiftDate = friday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 122, HoursWorked = 10.7M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 11, ShiftDate = saturday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 122, HoursWorked = 13.47M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 12, ShiftDate = sunday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 601, HoursWorked = 0.07M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },
				new PlantPayLine{WeekEndDate = weekEndDate, LayoffId = layoffId ?? 0, EmployeeId = "PaidSickLeave", QuickBaseRecordId = 13, ShiftDate = sunday, Plant = (int)Plant.Sanger,  PayType = PayType.Regular, LaborCode = 122, HoursWorked = 7.42M, Pieces = 0, AlternativeWorkWeek = false, HourlyRateOverride = 0M, EmployeeHourlyRate = 13.75M, IsH2A = false, IsIncentiveDisqualified = false, HasNonPrimaViolation = false, UseIncreasedRate = false, NonPrimaRate = 0M, PrimaRate = 0M, IncreasedRate = 0M, SpecialAdjustmentApproved = false },



			};
		}

		private List<PlantAdjustmentLine> PlantAdjustmentLinesTestInput(DateTime weekEndPaidDate, int? layoffId)
		{
			return new List<PlantAdjustmentLine>
			{
				new PlantAdjustmentLine{ QuickBaseRecordId = 887776, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,11), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 14.68M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887775, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,12), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 9.4M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887777, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,13), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 15.42M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887774, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,14), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 13.95M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887773, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,15), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 13.13M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887778, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,16), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 13.43M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887797, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,18), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 14.75M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887801, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,19), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 13.33M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887798, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,20), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 9.43M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887799, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,21), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 14.75M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887800, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,22), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 3.48M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887814, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,25), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887815, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,26), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887816, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,27), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887817, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,28), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887818, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,29), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887824, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,1), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887825, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,2), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887826, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,3), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887827, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,4), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887828, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,5), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = false, OldHourlyRate = 13M, UseOldHourlyRate = false },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887783, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,11), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "3-DT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 34.86M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887788, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,11), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 26M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887795, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,11), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 14.68M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887781, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,12), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 9.4M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887789, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,12), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 9.1M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887784, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,13), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "3-DT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 44.49M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887790, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,13), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 26M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887796, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,13), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 15.42M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887779, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,14), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 13.95M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887785, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,14), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "3-DT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 25.36M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887791, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,14), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 26M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887780, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,15), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 13.13M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887786, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,15), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "3-DT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 14.7M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887792, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,15), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 26M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887782, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,16), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 13.43M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887787, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,16), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "3-DT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 18.6M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887793, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,16), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 26M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887794, WeekEndDate = new DateTime(2020,5,17), ShiftDate = new DateTime(2020,5,17), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "40-Weekly OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 52.04M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887802, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,18), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 14.75M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887807, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,18), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "3-DT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 35.77M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887810, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,18), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 26M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887806, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,19), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 13.33M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887808, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,19), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "3-DT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 17.3M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887811, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,19), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 26M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887803, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,20), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 9.43M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887812, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,20), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 9.29M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887804, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,21), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 14.75M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887809, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,21), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "3-DT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 35.77M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887813, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,21), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 0M, PayType = "2-OT", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 26M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887805, WeekEndDate = new DateTime(2020,5,24), ShiftDate = new DateTime(2020,5,22), Plant = 4, EmployeeId = "826093", LaborCode = 112, HoursWorked = 3.48M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887819, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,25), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887820, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,26), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887821, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,27), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887822, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,28), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887823, WeekEndDate = new DateTime(2020,5,31), ShiftDate = new DateTime(2020,5,29), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887829, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,1), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887830, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,2), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887831, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,3), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887832, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,4), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },
				new PlantAdjustmentLine{ QuickBaseRecordId = 887833, WeekEndDate = new DateTime(2020,6,7), ShiftDate = new DateTime(2020,6,5), Plant = 4, EmployeeId = "826093", LaborCode = 600, HoursWorked = 8M, PayType = "1-Regular", Pieces = 0, PieceRate = 0M, GrossFromIncentive = 0M, OtherGross = 0M, AlternativeWorkWeek = false, EmployeeHourlyRate = 14M, IsH2A = false, WeekEndOfAdjustmentPaid = new DateTime(2020,7,5), IsOriginal = true, OldHourlyRate = 13M, UseOldHourlyRate = true },


			};
		}

		private List<PaidSickLeave> PlantPaidSickLeaveTestInput()
		{
			return new List<PaidSickLeave>
			{
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,20), Hours = 14.34M, Gross = 197.23M, Company = "P", HoursUsed = 0M, NinetyDayHours = 363.61M, NinetyDayGross = 4760.24M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,19), Hours = 10.08M, Gross = 138.75M, Company = "P", HoursUsed = 0M, NinetyDayHours = 353.53M, NinetyDayGross = 4621.49M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,18), Hours = 9.52M, Gross = 130.96M, Company = "P", HoursUsed = 0M, NinetyDayHours = 344.01M, NinetyDayGross = 4490.53M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,17), Hours = 4.15M, Gross = 57.1M, Company = "P", HoursUsed = 0M, NinetyDayHours = 339.86M, NinetyDayGross = 4433.43M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,16), Hours = 4.32M, Gross = 59.4M, Company = "P", HoursUsed = 0M, NinetyDayHours = 335.54M, NinetyDayGross = 4374.03M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,15), Hours = 11.6M, Gross = 159.62M, Company = "P", HoursUsed = 0M, NinetyDayHours = 323.94M, NinetyDayGross = 4214.41M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,13), Hours = 8.55M, Gross = 111.24M, Company = "P", HoursUsed = 0M, NinetyDayHours = 315.39M, NinetyDayGross = 4103.17M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,12), Hours = 8.45M, Gross = 109.93M, Company = "P", HoursUsed = 0M, NinetyDayHours = 306.94M, NinetyDayGross = 3993.24M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,11), Hours = 7.33M, Gross = 95.4M, Company = "P", HoursUsed = 0M, NinetyDayHours = 299.61M, NinetyDayGross = 3897.84M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,10), Hours = 7.71M, Gross = 100.39M, Company = "P", HoursUsed = 0M, NinetyDayHours = 291.9M, NinetyDayGross = 3797.45M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,9), Hours = 10.99M, Gross = 142.89M, Company = "P", HoursUsed = 0M, NinetyDayHours = 280.91M, NinetyDayGross = 3654.56M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,8), Hours = 9.45M, Gross = 122.94M, Company = "P", HoursUsed = 0M, NinetyDayHours = 271.46M, NinetyDayGross = 3531.62M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,6), Hours = 8.01M, Gross = 104.29M, Company = "P", HoursUsed = 0M, NinetyDayHours = 263.45M, NinetyDayGross = 3427.33M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,5), Hours = 9.7M, Gross = 126.2M, Company = "P", HoursUsed = 0M, NinetyDayHours = 253.75M, NinetyDayGross = 3301.13M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,4), Hours = 10.42M, Gross = 135.52M, Company = "P", HoursUsed = 0M, NinetyDayHours = 243.33M, NinetyDayGross = 3165.61M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,3), Hours = 14.4M, Gross = 187.34M, Company = "P", HoursUsed = 0M, NinetyDayHours = 228.93M, NinetyDayGross = 2978.27M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,2), Hours = 14.27M, Gross = 185.65M, Company = "P", HoursUsed = 0M, NinetyDayHours = 214.66M, NinetyDayGross = 2792.62M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,6,1), Hours = 14.87M, Gross = 193.41M, Company = "P", HoursUsed = 0M, NinetyDayHours = 199.79M, NinetyDayGross = 2599.21M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,30), Hours = 13.6M, Gross = 176.94M, Company = "P", HoursUsed = 0M, NinetyDayHours = 186.19M, NinetyDayGross = 2422.27M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,29), Hours = 10.83M, Gross = 140.95M, Company = "P", HoursUsed = 0M, NinetyDayHours = 175.36M, NinetyDayGross = 2281.32M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,28), Hours = 1.33M, Gross = 17.35M, Company = "P", HoursUsed = 10M, NinetyDayHours = 348.06M, NinetyDayGross = 4527.94M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,27), Hours = 9.54M, Gross = 124.03M, Company = "P", HoursUsed = 0M, NinetyDayHours = 164.49M, NinetyDayGross = 2139.94M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,26), Hours = 12.73M, Gross = 165.66M, Company = "P", HoursUsed = 0M, NinetyDayHours = 151.76M, NinetyDayGross = 1974.28M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,25), Hours = 13.02M, Gross = 169.35M, Company = "P", HoursUsed = 0M, NinetyDayHours = 138.74M, NinetyDayGross = 1804.93M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,23), Hours = 7.93M, Gross = 103.21M, Company = "P", HoursUsed = 0M, NinetyDayHours = 130.81M, NinetyDayGross = 1701.72M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,22), Hours = 8.47M, Gross = 110.15M, Company = "P", HoursUsed = 0M, NinetyDayHours = 122.34M, NinetyDayGross = 1591.57M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,21), Hours = 8.65M, Gross = 112.54M, Company = "P", HoursUsed = 0M, NinetyDayHours = 113.69M, NinetyDayGross = 1479.03M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,20), Hours = 5.4M, Gross = 70.25M, Company = "P", HoursUsed = 0M, NinetyDayHours = 108.29M, NinetyDayGross = 1408.78M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,19), Hours = 11.75M, Gross = 152.87M, Company = "P", HoursUsed = 0M, NinetyDayHours = 96.54M, NinetyDayGross = 1255.91M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,18), Hours = 11.97M, Gross = 155.69M, Company = "P", HoursUsed = 0M, NinetyDayHours = 84.57M, NinetyDayGross = 1100.22M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,16), Hours = 11.75M, Gross = 152.87M, Company = "P", HoursUsed = 0M, NinetyDayHours = 72.82M, NinetyDayGross = 947.35M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,15), Hours = 13.1M, Gross = 170.43M, Company = "P", HoursUsed = 0M, NinetyDayHours = 59.72M, NinetyDayGross = 776.92M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,14), Hours = 12.33M, Gross = 160.46M, Company = "P", HoursUsed = 0M, NinetyDayHours = 47.39M, NinetyDayGross = 616.46M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,13), Hours = 14.97M, Gross = 194.72M, Company = "P", HoursUsed = 0M, NinetyDayHours = 32.42M, NinetyDayGross = 421.74M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,12), Hours = 9.43M, Gross = 122.73M, Company = "P", HoursUsed = 0M, NinetyDayHours = 22.99M, NinetyDayGross = 299.01M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,11), Hours = 13.62M, Gross = 177.15M, Company = "P", HoursUsed = 0M, NinetyDayHours = 9.37M, NinetyDayGross = 121.86M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2020,5,9), Hours = 9.37M, Gross = 121.86M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,18), Hours = 10M, Gross = 125M, Company = "P", HoursUsed = 0M, NinetyDayHours = 749.26M, NinetyDayGross = 9368.18M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,17), Hours = 7.51M, Gross = 93.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 755.66M, NinetyDayGross = 9448.18M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,16), Hours = 5.86M, Gross = 73.25M, Company = "P", HoursUsed = 0M, NinetyDayHours = 763.8M, NinetyDayGross = 9549.93M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,15), Hours = 7.61M, Gross = 95.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 769.5M, NinetyDayGross = 9621.18M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,11), Hours = 7.8M, Gross = 97.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 791.99M, NinetyDayGross = 9902.32M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,10), Hours = 7.58M, Gross = 94.75M, Company = "P", HoursUsed = 0M, NinetyDayHours = 794.17M, NinetyDayGross = 9929.57M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,8), Hours = 7.76M, Gross = 97M, Company = "P", HoursUsed = 0M, NinetyDayHours = 797.72M, NinetyDayGross = 9973.95M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,7), Hours = 5.38M, Gross = 67.25M, Company = "P", HoursUsed = 0M, NinetyDayHours = 801.59M, NinetyDayGross = 10022.33M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,5), Hours = 4.13M, Gross = 51.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 803.89M, NinetyDayGross = 10047.86M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,4), Hours = 4.08M, Gross = 51M, Company = "P", HoursUsed = 0M, NinetyDayHours = 808.52M, NinetyDayGross = 10101.38M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,3), Hours = 5.05M, Gross = 63.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 814.32M, NinetyDayGross = 10168.45M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,10,2), Hours = 8.69M, Gross = 110.86M, Company = "P", HoursUsed = 0M, NinetyDayHours = 816.68M, NinetyDayGross = 10190.19M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,30), Hours = 9.15M, Gross = 114.38M, Company = "P", HoursUsed = 0M, NinetyDayHours = 819.64M, NinetyDayGross = 10221.13M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,28), Hours = 10.11M, Gross = 126.38M, Company = "P", HoursUsed = 0M, NinetyDayHours = 828.44M, NinetyDayGross = 10321.67M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,27), Hours = 7.3M, Gross = 91.25M, Company = "P", HoursUsed = 0M, NinetyDayHours = 830.77M, NinetyDayGross = 10345.98M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,26), Hours = 7.83M, Gross = 97.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 833.19M, NinetyDayGross = 10371.1M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,25), Hours = 8.11M, Gross = 101.38M, Company = "P", HoursUsed = 0M, NinetyDayHours = 834.94M, NinetyDayGross = 10388.04M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,24), Hours = 10.93M, Gross = 136.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 832.94M, NinetyDayGross = 10358.57M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,23), Hours = 10.81M, Gross = 135.14M, Company = "P", HoursUsed = 0M, NinetyDayHours = 829.39M, NinetyDayGross = 10310.55M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,21), Hours = 12.41M, Gross = 155.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 824.53M, NinetyDayGross = 10246.02M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,20), Hours = 12.88M, Gross = 161M, Company = "P", HoursUsed = 0M, NinetyDayHours = 818.58M, NinetyDayGross = 10168.18M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,19), Hours = 11.45M, Gross = 143.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 814.54M, NinetyDayGross = 10113.97M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,18), Hours = 11.81M, Gross = 147.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 810.03M, NinetyDayGross = 10053.94M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,17), Hours = 12.2M, Gross = 152.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 808.86M, NinetyDayGross = 10033.8M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,16), Hours = 10.08M, Gross = 126M, Company = "P", HoursUsed = 0M, NinetyDayHours = 808.41M, NinetyDayGross = 10023.36M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,14), Hours = 7.98M, Gross = 99.75M, Company = "P", HoursUsed = 0M, NinetyDayHours = 808.46M, NinetyDayGross = 10019.97M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,13), Hours = 8.71M, Gross = 108.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 805.26M, NinetyDayGross = 9977.21M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,12), Hours = 11.45M, Gross = 143.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 800.44M, NinetyDayGross = 9913.64M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,11), Hours = 11.93M, Gross = 149.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 794.89M, NinetyDayGross = 9841.07M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,10), Hours = 12.15M, Gross = 151.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 790.07M, NinetyDayGross = 9777.15M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,7), Hours = 9.33M, Gross = 116.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 795.72M, NinetyDayGross = 9840.28M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,6), Hours = 9.8M, Gross = 122.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 794.37M, NinetyDayGross = 9819.18M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,5), Hours = 9.95M, Gross = 124.37M, Company = "P", HoursUsed = 0M, NinetyDayHours = 789.43M, NinetyDayGross = 9754.93M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,4), Hours = 10.68M, Gross = 133.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 785.45M, NinetyDayGross = 9701.83M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,3), Hours = 10.03M, Gross = 125.37M, Company = "P", HoursUsed = 0M, NinetyDayHours = 781.1M, NinetyDayGross = 9644.62M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,9,2), Hours = 7.1M, Gross = 88.75M, Company = "P", HoursUsed = 0M, NinetyDayHours = 779.68M, NinetyDayGross = 9624.03M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,31), Hours = 7.28M, Gross = 91M, Company = "P", HoursUsed = 2M, NinetyDayHours = 1559.76M, NinetyDayGross = 19245.58M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,30), Hours = 11.11M, Gross = 138.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 773.1M, NinetyDayGross = 9535.87M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,29), Hours = 11.4M, Gross = 142.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 768.2M, NinetyDayGross = 9471.37M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,28), Hours = 11.08M, Gross = 138.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 757.12M, NinetyDayGross = 9332.87M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,27), Hours = 3.98M, Gross = 49.75M, Company = "P", HoursUsed = 12M, NinetyDayHours = 1517.64M, NinetyDayGross = 18702.56M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,26), Hours = 11.25M, Gross = 140.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 754.38M, NinetyDayGross = 9292.37M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,24), Hours = 12.65M, Gross = 158.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 744.26M, NinetyDayGross = 9164.6M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,23), Hours = 12.63M, Gross = 157.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 737.86M, NinetyDayGross = 9081.48M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,22), Hours = 13.11M, Gross = 163.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 732.76M, NinetyDayGross = 9013.72M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,21), Hours = 14M, Gross = 175M, Company = "P", HoursUsed = 0M, NinetyDayHours = 726.34M, NinetyDayGross = 8929.68M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,20), Hours = 12.63M, Gross = 157.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 713.71M, NinetyDayGross = 8771.8M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,19), Hours = 12.91M, Gross = 161.38M, Company = "P", HoursUsed = 0M, NinetyDayHours = 700.8M, NinetyDayGross = 8610.42M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,18), Hours = 7.38M, Gross = 92.25M, Company = "P", HoursUsed = 0M, NinetyDayHours = 693.42M, NinetyDayGross = 8518.17M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,17), Hours = 10.61M, Gross = 132.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 682.81M, NinetyDayGross = 8385.54M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,16), Hours = 6.28M, Gross = 78.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 676.53M, NinetyDayGross = 8307.04M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,15), Hours = 10.82M, Gross = 135.25M, Company = "P", HoursUsed = 0M, NinetyDayHours = 665.71M, NinetyDayGross = 8171.79M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,14), Hours = 9.38M, Gross = 117.25M, Company = "P", HoursUsed = 0M, NinetyDayHours = 656.33M, NinetyDayGross = 8054.54M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,13), Hours = 10.71M, Gross = 133.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 645.62M, NinetyDayGross = 7920.66M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,12), Hours = 10.96M, Gross = 137M, Company = "P", HoursUsed = 0M, NinetyDayHours = 634.66M, NinetyDayGross = 7783.66M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,10), Hours = 9.43M, Gross = 117.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 625.23M, NinetyDayGross = 7665.78M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,9), Hours = 12.06M, Gross = 150.75M, Company = "P", HoursUsed = 0M, NinetyDayHours = 613.17M, NinetyDayGross = 7515.03M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,8), Hours = 10.73M, Gross = 134.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 602.44M, NinetyDayGross = 7380.9M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,7), Hours = 12.58M, Gross = 157.25M, Company = "P", HoursUsed = 0M, NinetyDayHours = 589.86M, NinetyDayGross = 7223.65M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,6), Hours = 12.98M, Gross = 162.25M, Company = "P", HoursUsed = 0M, NinetyDayHours = 576.88M, NinetyDayGross = 7061.4M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,5), Hours = 13.13M, Gross = 164.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 563.75M, NinetyDayGross = 6897.27M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,3), Hours = 6.28M, Gross = 78.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 557.47M, NinetyDayGross = 6818.77M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,2), Hours = 11.73M, Gross = 146.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 545.74M, NinetyDayGross = 6672.14M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,8,1), Hours = 11.33M, Gross = 141.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 534.41M, NinetyDayGross = 6530.51M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,31), Hours = 12.04M, Gross = 150.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 522.37M, NinetyDayGross = 6380.01M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,30), Hours = 1.5M, Gross = 18.75M, Company = "P", HoursUsed = 0M, NinetyDayHours = 520.87M, NinetyDayGross = 6361.26M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,29), Hours = 12M, Gross = 150M, Company = "P", HoursUsed = 0M, NinetyDayHours = 508.87M, NinetyDayGross = 6211.26M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,27), Hours = 12.6M, Gross = 157.5M, Company = "P", HoursUsed = 0M, NinetyDayHours = 496.27M, NinetyDayGross = 6053.76M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,26), Hours = 2.95M, Gross = 36.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 493.32M, NinetyDayGross = 6016.88M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,25), Hours = 12.93M, Gross = 161.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 480.39M, NinetyDayGross = 5855.25M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,24), Hours = 13.41M, Gross = 167.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 466.98M, NinetyDayGross = 5687.62M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,23), Hours = 13.58M, Gross = 169.75M, Company = "P", HoursUsed = 0M, NinetyDayHours = 453.4M, NinetyDayGross = 5517.87M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,22), Hours = 14.55M, Gross = 181.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 438.85M, NinetyDayGross = 5335.99M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,21), Hours = 9.61M, Gross = 120.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,20), Hours = 14.13M, Gross = 176.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,19), Hours = 13.91M, Gross = 173.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,18), Hours = 13.91M, Gross = 173.88M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,17), Hours = 14M, Gross = 175M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,16), Hours = 13.31M, Gross = 166.38M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,15), Hours = 12.03M, Gross = 150.38M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,14), Hours = 8.41M, Gross = 105.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 339.54M, NinetyDayGross = 4094.58M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,13), Hours = 9.85M, Gross = 123.13M, Company = "P", HoursUsed = 0M, NinetyDayHours = 329.69M, NinetyDayGross = 3971.45M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,11), Hours = 9.76M, Gross = 122M, Company = "P", HoursUsed = 0M, NinetyDayHours = 319.93M, NinetyDayGross = 3849.45M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,10), Hours = 11.31M, Gross = 141.38M, Company = "P", HoursUsed = 0M, NinetyDayHours = 308.62M, NinetyDayGross = 3708.07M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,9), Hours = 0M, Gross = 0M, Company = "P", HoursUsed = 10M, NinetyDayHours = 308.62M, NinetyDayGross = 3708.07M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,8), Hours = 9.25M, Gross = 115.63M, Company = "P", HoursUsed = 0M, NinetyDayHours = 299.37M, NinetyDayGross = 3592.44M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,6), Hours = 6.43M, Gross = 77.16M, Company = "P", HoursUsed = 0M, NinetyDayHours = 292.94M, NinetyDayGross = 3515.28M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,5), Hours = 8.71M, Gross = 104.52M, Company = "P", HoursUsed = 0M, NinetyDayHours = 284.23M, NinetyDayGross = 3410.76M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,4), Hours = 10.85M, Gross = 130.2M, Company = "P", HoursUsed = 0M, NinetyDayHours = 273.38M, NinetyDayGross = 3280.56M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,3), Hours = 11.05M, Gross = 132.6M, Company = "P", HoursUsed = 0M, NinetyDayHours = 262.33M, NinetyDayGross = 3147.96M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,7,2), Hours = 12.11M, Gross = 145.32M, Company = "P", HoursUsed = 0M, NinetyDayHours = 250.22M, NinetyDayGross = 3002.64M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,30), Hours = 8.13M, Gross = 97.56M, Company = "P", HoursUsed = 0M, NinetyDayHours = 242.09M, NinetyDayGross = 2905.08M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,29), Hours = 10.78M, Gross = 129.36M, Company = "P", HoursUsed = 0M, NinetyDayHours = 231.31M, NinetyDayGross = 2775.72M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,28), Hours = 9.63M, Gross = 115.56M, Company = "P", HoursUsed = 0M, NinetyDayHours = 221.68M, NinetyDayGross = 2660.16M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,27), Hours = 10.25M, Gross = 123M, Company = "P", HoursUsed = 0M, NinetyDayHours = 211.43M, NinetyDayGross = 2537.16M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,26), Hours = 9.86M, Gross = 118.32M, Company = "P", HoursUsed = 0M, NinetyDayHours = 201.57M, NinetyDayGross = 2418.84M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,25), Hours = 8.93M, Gross = 107.16M, Company = "P", HoursUsed = 0M, NinetyDayHours = 192.64M, NinetyDayGross = 2311.68M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,24), Hours = 7.26M, Gross = 87.12M, Company = "P", HoursUsed = 0M, NinetyDayHours = 185.38M, NinetyDayGross = 2224.56M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,22), Hours = 7.55M, Gross = 90.6M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,21), Hours = 6.93M, Gross = 83.16M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,20), Hours = 7.41M, Gross = 88.92M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,19), Hours = 7.3M, Gross = 87.6M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,18), Hours = 11.03M, Gross = 132.36M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,17), Hours = 9.63M, Gross = 115.56M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,15), Hours = 8.03M, Gross = 96.36M, Company = "P", HoursUsed = 0M, NinetyDayHours = 127.5M, NinetyDayGross = 1530M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,14), Hours = 5.51M, Gross = 66.12M, Company = "P", HoursUsed = 0M, NinetyDayHours = 121.99M, NinetyDayGross = 1463.88M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,13), Hours = 6.63M, Gross = 79.56M, Company = "P", HoursUsed = 0M, NinetyDayHours = 115.36M, NinetyDayGross = 1384.32M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,12), Hours = 6.38M, Gross = 76.56M, Company = "P", HoursUsed = 0M, NinetyDayHours = 108.98M, NinetyDayGross = 1307.76M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,11), Hours = 7.33M, Gross = 87.96M, Company = "P", HoursUsed = 0M, NinetyDayHours = 101.65M, NinetyDayGross = 1219.8M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,10), Hours = 7.73M, Gross = 92.76M, Company = "P", HoursUsed = 0M, NinetyDayHours = 93.92M, NinetyDayGross = 1127.04M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,8), Hours = 7.25M, Gross = 87M, Company = "P", HoursUsed = 0M, NinetyDayHours = 86.67M, NinetyDayGross = 1040.04M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,7), Hours = 8.45M, Gross = 101.4M, Company = "P", HoursUsed = 0M, NinetyDayHours = 78.22M, NinetyDayGross = 938.64M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,6), Hours = 5.01M, Gross = 60.12M, Company = "P", HoursUsed = 0M, NinetyDayHours = 73.21M, NinetyDayGross = 878.52M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,5), Hours = 6.7M, Gross = 80.4M, Company = "P", HoursUsed = 0M, NinetyDayHours = 66.51M, NinetyDayGross = 798.12M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,4), Hours = 5.68M, Gross = 68.16M, Company = "P", HoursUsed = 0M, NinetyDayHours = 60.83M, NinetyDayGross = 729.96M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,3), Hours = 5.68M, Gross = 68.16M, Company = "P", HoursUsed = 0M, NinetyDayHours = 55.15M, NinetyDayGross = 661.8M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,6,1), Hours = 7.48M, Gross = 89.76M, Company = "P", HoursUsed = 0M, NinetyDayHours = 47.67M, NinetyDayGross = 572.04M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,31), Hours = 4.33M, Gross = 51.96M, Company = "P", HoursUsed = 0M, NinetyDayHours = 43.34M, NinetyDayGross = 520.08M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,30), Hours = 6.5M, Gross = 78M, Company = "P", HoursUsed = 0M, NinetyDayHours = 36.84M, NinetyDayGross = 442.08M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,28), Hours = 5.68M, Gross = 68.16M, Company = "P", HoursUsed = 0M, NinetyDayHours = 31.16M, NinetyDayGross = 373.92M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,27), Hours = 6.81M, Gross = 81.72M, Company = "P", HoursUsed = 0M, NinetyDayHours = 24.35M, NinetyDayGross = 292.2M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,25), Hours = 2.53M, Gross = 30.36M, Company = "P", HoursUsed = 0M, NinetyDayHours = 21.82M, NinetyDayGross = 261.84M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,24), Hours = 6.23M, Gross = 74.76M, Company = "P", HoursUsed = 0M, NinetyDayHours = 15.59M, NinetyDayGross = 187.08M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,23), Hours = 8.01M, Gross = 96.12M, Company = "P", HoursUsed = 0M, NinetyDayHours = 7.58M, NinetyDayGross = 90.96M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,22), Hours = 7.58M, Gross = 90.96M, Company = "P", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,17), Hours = 9.5M, Gross = 123.5M, Company = "R", HoursUsed = 0M, NinetyDayHours = 69.5M, NinetyDayGross = 903.5M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,14), Hours = 7.25M, Gross = 94.25M, Company = "R", HoursUsed = 0M, NinetyDayHours = 62.25M, NinetyDayGross = 809.25M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,8), Hours = 7M, Gross = 91M, Company = "R", HoursUsed = 0M, NinetyDayHours = 55.25M, NinetyDayGross = 718.25M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,7), Hours = 8.75M, Gross = 113.75M, Company = "R", HoursUsed = 0M, NinetyDayHours = 46.5M, NinetyDayGross = 604.5M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,5), Hours = 4M, Gross = 52M, Company = "R", HoursUsed = 0M, NinetyDayHours = 42.5M, NinetyDayGross = 552.5M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,5,4), Hours = 9.5M, Gross = 123.5M, Company = "R", HoursUsed = 0M, NinetyDayHours = 33M, NinetyDayGross = 429M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,4,27), Hours = 5.5M, Gross = 71.5M, Company = "R", HoursUsed = 0M, NinetyDayHours = 27.5M, NinetyDayGross = 357.5M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,4,25), Hours = 9.5M, Gross = 123.5M, Company = "R", HoursUsed = 0M, NinetyDayHours = 18M, NinetyDayGross = 234M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,4,24), Hours = 9M, Gross = 117M, Company = "R", HoursUsed = 0M, NinetyDayHours = 9M, NinetyDayGross = 117M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2019,4,23), Hours = 9M, Gross = 117M, Company = "R", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2018,11,29), Hours = 6M, Gross = 72M, Company = "R", HoursUsed = 0M, NinetyDayHours = 2M, NinetyDayGross = 24M },
				new PaidSickLeave{ EmployeeId = "PaidSickLeave", ShiftDate = new DateTime(2018,11,28), Hours = 2M, Gross = 24M, Company = "R", HoursUsed = 0M, NinetyDayHours = 0M, NinetyDayGross = 0M },
			};
		}
	}
}
